{
  "address": "0x7DB6D9fC51D75588dD4883E0D0127Ec128f44e8c",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "NewMemo",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_message",
          "type": "string"
        }
      ],
      "name": "buyCoffee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMemos",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "internalType": "struct BuyMeACoffee.Memo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "updateOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawTips",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd3b8294f6dd8f41518d5e37e20d50f3807fec5e19c12a8c8a222b5ae65c0241e",
  "receipt": {
    "to": null,
    "from": "0x7FCfA189672E7511106B6ff025d55250EEF3f9ef",
    "contractAddress": "0x7DB6D9fC51D75588dD4883E0D0127Ec128f44e8c",
    "transactionIndex": 127,
    "gasUsed": "860006",
    "logsBloom": "0x
    "blockHash": "0x7350758b321031e78994df76043640dd461275bb6e840507dff0bbebf31571f3",
    "transactionHash": "0xd3b8294f6dd8f41518d5e37e20d50f3807fec5e19c12a8c8a222b5ae65c0241e",
    "logs": [],
    "blockNumber": 8144566,
    "cumulativeGasUsed": "24925022",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "defdd2c02239354e21586ad0503e795b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"NewMemo\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"buyCoffee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMemos\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"internalType\":\"struct BuyMeACoffee.Memo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"updateOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTips\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buyCoffee(string,string)\":{\"details\":\"buy a coffee for owner (sends an ETH tip and leaves a memo)\",\"params\":{\"_message\":\"a nice message from the purchaser\",\"_name\":\"name of the coffee purchaser\"}},\"getMemos()\":{\"details\":\"fetches all stored memos\"},\"withdrawTips()\":{\"details\":\"send the entire balance stored in this contract to the owner\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BuyMeACoffee.sol\":\"BuyMeACoffee\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BuyMeACoffee.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.16;\\n\\ncontract BuyMeACoffee {\\n    // Event to emit when a Memo is created.\\n    event NewMemo(\\n        address indexed from,\\n        uint256 timestamp,\\n        string name,\\n        string message\\n    );\\n\\n    // Memo struct.\\n    struct Memo {\\n        address from;\\n        uint256 timestamp;\\n        string name;\\n        string message;\\n    }\\n\\n    // Address of contract deployer. Marked payable so that\\n    // we can withdraw to this address later.\\n    address payable owner;\\n\\n    // List of all memos received from coffee purchases.\\n    Memo[] memos;\\n\\n    constructor() {\\n        // Store the address of the deployer as a payable address.\\n        // When we withdraw funds, we'll withdraw here.\\n        owner = payable(msg.sender);\\n    }\\n\\n    /**\\n     * @dev fetches all stored memos\\n     */\\n    function getMemos() public view returns (Memo[] memory) {\\n        return memos;\\n    }\\n\\n    /**\\n     * @dev buy a coffee for owner (sends an ETH tip and leaves a memo)\\n     * @param _name name of the coffee purchaser\\n     * @param _message a nice message from the purchaser\\n     */\\n    function buyCoffee(\\n        string memory _name,\\n        string memory _message\\n    ) public payable {\\n        // Must accept more than 0 ETH for a coffee.\\n        require(msg.value > 0, \\\"can't buy coffee for free!\\\");\\n\\n        // Add the memo to storage!\\n        memos.push(Memo(msg.sender, block.timestamp, _name, _message));\\n\\n        // Emit a NewMemo event with details about the memo.\\n        emit NewMemo(msg.sender, block.timestamp, _name, _message);\\n    }\\n\\n    /**\\n     * @dev send the entire balance stored in this contract to the owner\\n     */\\n    function withdrawTips() public {\\n        require(owner.send(address(this).balance));\\n    }\\n\\n    function updateOwner(address newOwner) external {\\n        require(msg.sender == owner, 'Only owner allowed to update!');\\n        owner = payable(newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x907f810934a07ffcdc81d94f572c7b92cae420f5a725725060d30d1ddb8505fd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e35806100606000396000f3fe60806040526004361061003f5760003560e01c8063204206e1146100445780633aaa74b214610060578063865c517214610077578063880cdc31146100a2575b600080fd5b61005e600480360381019061005991906106b3565b6100cb565b005b34801561006c57600080fd5b50610075610245565b005b34801561008357600080fd5b5061008c6102a5565b6040516100999190610930565b60405180910390f35b3480156100ae57600080fd5b506100c960048036038101906100c4919061097e565b610488565b005b6000341161010e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010590610a08565b60405180910390fd5b600160405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200183815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190816101d69190610c34565b5060608201518160030190816101ec9190610c34565b5050503373ffffffffffffffffffffffffffffffffffffffff167fc56140e05f516509ae28110e0f72e17558a7561630dad2647c3ae87d986e365c42848460405161023993929190610d4e565b60405180910390a25050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050506102a357600080fd5b565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561047f57838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805461035c90610a57565b80601f016020809104026020016040519081016040528092919081815260200182805461038890610a57565b80156103d55780601f106103aa576101008083540402835291602001916103d5565b820191906000526020600020905b8154815290600101906020018083116103b857829003601f168201915b505050505081526020016003820180546103ee90610a57565b80601f016020809104026020016040519081016040528092919081815260200182805461041a90610a57565b80156104675780601f1061043c57610100808354040283529160200191610467565b820191906000526020600020905b81548152906001019060200180831161044a57829003601f168201915b505050505081525050815260200190600101906102c9565b50505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610516576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050d90610ddf565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105c082610577565b810181811067ffffffffffffffff821117156105df576105de610588565b5b80604052505050565b60006105f2610559565b90506105fe82826105b7565b919050565b600067ffffffffffffffff82111561061e5761061d610588565b5b61062782610577565b9050602081019050919050565b82818337600083830152505050565b600061065661065184610603565b6105e8565b90508281526020810184848401111561067257610671610572565b5b61067d848285610634565b509392505050565b600082601f83011261069a5761069961056d565b5b81356106aa848260208601610643565b91505092915050565b600080604083850312156106ca576106c9610563565b5b600083013567ffffffffffffffff8111156106e8576106e7610568565b5b6106f485828601610685565b925050602083013567ffffffffffffffff81111561071557610714610568565b5b61072185828601610685565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078282610757565b9050919050565b61079281610777565b82525050565b6000819050919050565b6107ab81610798565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107eb5780820151818401526020810190506107d0565b60008484015250505050565b6000610802826107b1565b61080c81856107bc565b935061081c8185602086016107cd565b61082581610577565b840191505092915050565b60006080830160008301516108486000860182610789565b50602083015161085b60208601826107a2565b506040830151848203604086015261087382826107f7565b9150506060830151848203606086015261088d82826107f7565b9150508091505092915050565b60006108a68383610830565b905092915050565b6000602082019050919050565b60006108c68261072b565b6108d08185610736565b9350836020820285016108e285610747565b8060005b8581101561091e57848403895281516108ff858261089a565b945061090a836108ae565b925060208a019950506001810190506108e6565b50829750879550505050505092915050565b6000602082019050818103600083015261094a81846108bb565b905092915050565b61095b81610777565b811461096657600080fd5b50565b60008135905061097881610952565b92915050565b60006020828403121561099457610993610563565b5b60006109a284828501610969565b91505092915050565b600082825260208201905092915050565b7f63616e27742062757920636f6666656520666f72206672656521000000000000600082015250565b60006109f2601a836109ab565b91506109fd826109bc565b602082019050919050565b60006020820190508181036000830152610a21816109e5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610a6f57607f821691505b602082108103610a8257610a81610a28565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610aea7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610aad565b610af48683610aad565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610b31610b2c610b2784610798565b610b0c565b610798565b9050919050565b6000819050919050565b610b4b83610b16565b610b5f610b5782610b38565b848454610aba565b825550505050565b600090565b610b74610b67565b610b7f818484610b42565b505050565b5b81811015610ba357610b98600082610b6c565b600181019050610b85565b5050565b601f821115610be857610bb981610a88565b610bc284610a9d565b81016020851015610bd1578190505b610be5610bdd85610a9d565b830182610b84565b50505b505050565b600082821c905092915050565b6000610c0b60001984600802610bed565b1980831691505092915050565b6000610c248383610bfa565b9150826002028217905092915050565b610c3d826107b1565b67ffffffffffffffff811115610c5657610c55610588565b5b610c608254610a57565b610c6b828285610ba7565b600060209050601f831160018114610c9e5760008415610c8c578287015190505b610c968582610c18565b865550610cfe565b601f198416610cac86610a88565b60005b82811015610cd457848901518255600182019150602085019450602081019050610caf565b86831015610cf15784890151610ced601f891682610bfa565b8355505b6001600288020188555050505b505050505050565b610d0f81610798565b82525050565b6000610d20826107b1565b610d2a81856109ab565b9350610d3a8185602086016107cd565b610d4381610577565b840191505092915050565b6000606082019050610d636000830186610d06565b8181036020830152610d758185610d15565b90508181036040830152610d898184610d15565b9050949350505050565b7f4f6e6c79206f776e657220616c6c6f77656420746f2075706461746521000000600082015250565b6000610dc9601d836109ab565b9150610dd482610d93565b602082019050919050565b60006020820190508181036000830152610df881610dbc565b905091905056fea26469706673582212201b4851bc69dad91406c927567569021edea71e3652f13ca60e0b82987051b10164736f6c63430008100033",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c8063204206e1146100445780633aaa74b214610060578063865c517214610077578063880cdc31146100a2575b600080fd5b61005e600480360381019061005991906106b3565b6100cb565b005b34801561006c57600080fd5b50610075610245565b005b34801561008357600080fd5b5061008c6102a5565b6040516100999190610930565b60405180910390f35b3480156100ae57600080fd5b506100c960048036038101906100c4919061097e565b610488565b005b6000341161010e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010590610a08565b60405180910390fd5b600160405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200183815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190816101d69190610c34565b5060608201518160030190816101ec9190610c34565b5050503373ffffffffffffffffffffffffffffffffffffffff167fc56140e05f516509ae28110e0f72e17558a7561630dad2647c3ae87d986e365c42848460405161023993929190610d4e565b60405180910390a25050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050506102a357600080fd5b565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561047f57838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805461035c90610a57565b80601f016020809104026020016040519081016040528092919081815260200182805461038890610a57565b80156103d55780601f106103aa576101008083540402835291602001916103d5565b820191906000526020600020905b8154815290600101906020018083116103b857829003601f168201915b505050505081526020016003820180546103ee90610a57565b80601f016020809104026020016040519081016040528092919081815260200182805461041a90610a57565b80156104675780601f1061043c57610100808354040283529160200191610467565b820191906000526020600020905b81548152906001019060200180831161044a57829003601f168201915b505050505081525050815260200190600101906102c9565b50505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610516576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050d90610ddf565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105c082610577565b810181811067ffffffffffffffff821117156105df576105de610588565b5b80604052505050565b60006105f2610559565b90506105fe82826105b7565b919050565b600067ffffffffffffffff82111561061e5761061d610588565b5b61062782610577565b9050602081019050919050565b82818337600083830152505050565b600061065661065184610603565b6105e8565b90508281526020810184848401111561067257610671610572565b5b61067d848285610634565b509392505050565b600082601f83011261069a5761069961056d565b5b81356106aa848260208601610643565b91505092915050565b600080604083850312156106ca576106c9610563565b5b600083013567ffffffffffffffff8111156106e8576106e7610568565b5b6106f485828601610685565b925050602083013567ffffffffffffffff81111561071557610714610568565b5b61072185828601610685565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078282610757565b9050919050565b61079281610777565b82525050565b6000819050919050565b6107ab81610798565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107eb5780820151818401526020810190506107d0565b60008484015250505050565b6000610802826107b1565b61080c81856107bc565b935061081c8185602086016107cd565b61082581610577565b840191505092915050565b60006080830160008301516108486000860182610789565b50602083015161085b60208601826107a2565b506040830151848203604086015261087382826107f7565b9150506060830151848203606086015261088d82826107f7565b9150508091505092915050565b60006108a68383610830565b905092915050565b6000602082019050919050565b60006108c68261072b565b6108d08185610736565b9350836020820285016108e285610747565b8060005b8581101561091e57848403895281516108ff858261089a565b945061090a836108ae565b925060208a019950506001810190506108e6565b50829750879550505050505092915050565b6000602082019050818103600083015261094a81846108bb565b905092915050565b61095b81610777565b811461096657600080fd5b50565b60008135905061097881610952565b92915050565b60006020828403121561099457610993610563565b5b60006109a284828501610969565b91505092915050565b600082825260208201905092915050565b7f63616e27742062757920636f6666656520666f72206672656521000000000000600082015250565b60006109f2601a836109ab565b91506109fd826109bc565b602082019050919050565b60006020820190508181036000830152610a21816109e5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610a6f57607f821691505b602082108103610a8257610a81610a28565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610aea7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610aad565b610af48683610aad565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610b31610b2c610b2784610798565b610b0c565b610798565b9050919050565b6000819050919050565b610b4b83610b16565b610b5f610b5782610b38565b848454610aba565b825550505050565b600090565b610b74610b67565b610b7f818484610b42565b505050565b5b81811015610ba357610b98600082610b6c565b600181019050610b85565b5050565b601f821115610be857610bb981610a88565b610bc284610a9d565b81016020851015610bd1578190505b610be5610bdd85610a9d565b830182610b84565b50505b505050565b600082821c905092915050565b6000610c0b60001984600802610bed565b1980831691505092915050565b6000610c248383610bfa565b9150826002028217905092915050565b610c3d826107b1565b67ffffffffffffffff811115610c5657610c55610588565b5b610c608254610a57565b610c6b828285610ba7565b600060209050601f831160018114610c9e5760008415610c8c578287015190505b610c968582610c18565b865550610cfe565b601f198416610cac86610a88565b60005b82811015610cd457848901518255600182019150602085019450602081019050610caf565b86831015610cf15784890151610ced601f891682610bfa565b8355505b6001600288020188555050505b505050505050565b610d0f81610798565b82525050565b6000610d20826107b1565b610d2a81856109ab565b9350610d3a8185602086016107cd565b610d4381610577565b840191505092915050565b6000606082019050610d636000830186610d06565b8181036020830152610d758185610d15565b90508181036040830152610d898184610d15565b9050949350505050565b7f4f6e6c79206f776e657220616c6c6f77656420746f2075706461746521000000600082015250565b6000610dc9601d836109ab565b9150610dd482610d93565b602082019050919050565b60006020820190508181036000830152610df881610dbc565b905091905056fea26469706673582212201b4851bc69dad91406c927567569021edea71e3652f13ca60e0b82987051b10164736f6c63430008100033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "buyCoffee(string,string)": {
        "details": "buy a coffee for owner (sends an ETH tip and leaves a memo)",
        "params": {
          "_message": "a nice message from the purchaser",
          "_name": "name of the coffee purchaser"
        }
      },
      "getMemos()": {
        "details": "fetches all stored memos"
      },
      "withdrawTips()": {
        "details": "send the entire balance stored in this contract to the owner"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 22,
        "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address_payable"
      },
      {
        "astId": 26,
        "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
        "label": "memos",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Memo)20_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Memo)20_storage)dyn_storage": {
        "base": "t_struct(Memo)20_storage",
        "encoding": "dynamic_array",
        "label": "struct BuyMeACoffee.Memo[]",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Memo)20_storage": {
        "encoding": "inplace",
        "label": "struct BuyMeACoffee.Memo",
        "members": [
          {
            "astId": 13,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "from",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 15,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 17,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 19,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "message",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}